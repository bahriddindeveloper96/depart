<?php

namespace common\models\measure;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use yiidreamteam\upload\FileUploadBehavior;
use common\models\User;
use common\models\control\Instruction;
/**
 * This is the model class for table "executions".
 *
 * @property int $id
 * @property int|null $control_instruction_id
 * @property string|null $person
 * @property string|null $number_passport
 * @property int|null $fine_amount
 * @property int|null $paid_amount
 * @property string|null $band_mjtk
 * @property string|null $explanation_letter
 * @property string|null $claim
 * @property string|null $court_letter
 * @property string|null $person_position
 * @property int|null $first_date
 * @property string|null $caution_number
 * @property int $created_by
 * @property int $updated_by
 * @property int $created_at
 * @property int $updated_at
 *
 * @property ControlInstructions $controlInstruction
 * @property User $createdBy
 * @property User $updatedBy
 */
class Executions extends \yii\db\ActiveRecord
{
    public $m212;
    public $m213;
    public $m214;
    public $s_explanation_letter;
    public $s_claim;
    public $s_court_letter;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'executions';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['control_instruction_id', 'fine_amount', 'paid_amount', 'm212','m213','m214', 'created_by', 'updated_by', 'created_at', 'updated_at'], 'integer'],
            [['person_position'], 'string'],
            [['person','number_passport'], 'required'],
            [['person', 'number_passport','first_date', 'band_mjtk', 'explanation_letter', 'claim', 'court_letter', 'caution_number'], 'string', 'max' => 255],
            [['control_instruction_id'], 'exist', 'skipOnError' => true, 'targetClass' => Instruction::class, 'targetAttribute' => ['control_instruction_id' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['updated_by' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'control_instruction_id' => 'Control Instruction ID',
            'person' => 'Jarimaga tortilgan shaxs F.I.O',
            'number_passport' => 'Passport seriya',
            'fine_amount' => 'Jarima summasi',
            'realization_date' => 'Realizatsiyasni taqiqlash sanasi',
            'realization_number' => 'Realizatsiyasni taqiqlash raqami',
            'band_mjtk' => 'MJtK moddalari',
            'explanation_letter' => 'Tushuntirish xati',
            'claim' => 'Talabnoma',
            'court_letter' => 'Sud xati',
            'first_warn_date' => 'Eng birinchi ogohlantirish berilgan sana',
            'warn_number' => 'Ogohlantirish koâ€™rsatmasi raqami',
            'paid_amount' => 'To\'langan summa',
            'person_position' => 'Lavozimi',
            'first_date' => 'MJ kiritilgan sana',
            'caution_number' => 'Ko\'rsatma raqami',
            'm212' =>'212-modda',
            'm213' =>'213-modda',
            'm214' =>'214-modda',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'created_at' => 'Yaratilgan sanasi',
            'updated_at' => 'Yangilangan sanasi',
        ];
    }
    public function beforeSave($insert)
    {
        if (!parent::beforeSave($insert)) {
            return false;
        }

        $this->first_date = strtotime($this->first_date);

        return true;
    }
    public function afterFind()
    {
        $this->first_date = Yii::$app->formatter->asDate($this->first_date, 'M/dd/yyyy');
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
    public function behaviors()
    {
        return [
            TimestampBehavior::class,
            BlameableBehavior::class,
            [
                'class' => FileUploadBehavior::class,
                'attribute' => 's_court_letter',
                'filePath' => '@webroot/uploads/executions/sud_xati/[[pk]].[[extension]]',
                'fileUrl' => '/uploads/executions/sud_xati/[[pk]].[[extension]]',
            ],
            [
                'class' => FileUploadBehavior::class,
                'attribute' => 's_claim',
                'filePath' => '@webroot/uploads/executions/talabnoma/[[pk]].[[extension]]',
                'fileUrl' => '/uploads/executions/talabnoma/[[pk]].[[extension]]',
            ],
            [
                'class' => FileUploadBehavior::class,
                'attribute' => 's_explanation_letter',
                'filePath' => '@webroot/uploads/executions/tushuntirish_xati/[[pk]].[[extension]]',
                'fileUrl' => '/uploads/executions/tushuntirish_xati/[[pk]].[[extension]]',
            ],
        ];
    }
    
    public function getControlInstruction()
    {
        return $this->hasOne(ControlInstructions::class, ['id' => 'control_instruction_id']);
    }

   
    public function getCreatedBy()
    {
        return $this->hasOne(User::class, ['id' => 'created_by']);
    }

    
    public function getUpdatedBy()
    {
        return $this->hasOne(User::class, ['id' => 'updated_by']);
    }
}
