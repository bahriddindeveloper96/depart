<?php

namespace common\models\measure;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use common\models\User;

/**
 * This is the model class for table "economics".
 *
 * @property int $id
 * @property int|null $control_instruction_id
 * @property int|null $first_warn_date
 * @property int|null $number_passport
 * @property int|null $warn_number
 * @property int|null $eco_date
 * @property int|null $eco_number
 * @property string|null $eco_quantity
 * @property string|null $eco_amount
 * @property int $created_by
 * @property int $updated_by
 * @property int $created_at
 * @property int $updated_at
 *
 * @property User $createdBy
 * @property User $updatedBy
 */
class Economics extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'economics';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['control_instruction_id',  'number_passport', 'warn_number', 'eco_number', 'created_by', 'updated_by', 'created_at', 'updated_at'], 'integer'],
            [['eco_date','warn_number'], 'required'],
            [['eco_quantity', 'eco_amount','first_warn_date', 'eco_date'], 'string', 'max' => 255],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['updated_by' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'control_instruction_id' => 'Control Instruction ID',
            'first_warn_date' => 'Eng birinchi ogohlantirish berilgan sana',
            'warn_number' => 'Ogohlantirish koâ€™rsatmasi raqami',
            'eco_date' => 'Iqtisodiy jarima sanasi',
            'eco_number' => 'Iqtisodiy jarima raqami',
            'eco_quantity' => 'Iqtisodiy jarimada koâ€™rsatilgan mahsulotlar miqdori',
            'eco_amount' => 'Iqtisodiy jarimada koâ€™rsatilgan mahsulotlar summasi',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'created_at' => 'Yaratilgan sanasi',
            'updated_at' => 'Yangilangan sanasi',
        ];
    }
    public function behaviors()
    {
        return [
            TimestampBehavior::class,
            BlameableBehavior::class,
        ];
    }
    public function beforeSave($insert)
    {
        if (!parent::beforeSave($insert)) {
            return false;
        }
        $this->eco_date = strtotime($this->eco_date);
        $this->first_warn_date = strtotime($this->first_warn_date);

        return true;
    }
    public function afterFind()
    {
        $this->eco_date = Yii::$app->formatter->asDate($this->eco_date, 'MM/dd/yyyy');
        $this->first_warn_date = Yii::$app->formatter->asDate($this->first_warn_date, 'MM/dd/yyyy');
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
    /**
     * Gets query for [[CreatedBy]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(User::class, ['id' => 'created_by']);
    }

    /**
     * Gets query for [[UpdatedBy]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(User::class, ['id' => 'updated_by']);
    }
}
