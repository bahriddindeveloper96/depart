<?php

namespace common\models\control;

use Yii;

/**
 * This is the model class for table "control_product_certification".
 *
 * @property int $id
 * @property int|null $product_id
 * @property int|null $number_reestr
 * @property int|null $date_to
 * @property int|null $date_from
 * @property int|null $amount
 * @property int|null $quantity
 *
 * @property ControlPrimaryProduct $product
 */
class ControlProductCertification extends \yii\db\ActiveRecord
{
    public $product_name;
    public $certificate;
    public $amount;
    public $quantity;
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'control_product_certification';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['number_reestr','product_id'], 'required'],
            [['product_id', 'number_reestr',], 'integer'],
            [['date_to', 'date_from'],'string'],
            [['product_id'], 'exist', 'skipOnError' => true, 'targetClass' => PrimaryProduct::class, 'targetAttribute' => ['product_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'product_id' => 'Product ID',
            'product_name' => 'Mahsulot nomi',
            'number_reestr' => 'Reestr raqami',
            'date_to' => 'Berilgan vaqti',
            'date_from' => 'Amal qilish muddati',
            'amount' => 'Sertifikatsiz realizatsiya qilingan mahsulot qoldiq miqdori',
            'quantity' => 'Sertifikatsiz realizatsiya qilingan mahsulot qoldiq summasi'
           
        ];
    }

    public function beforeSave($insert)
    {
        if (!parent::beforeSave($insert)) {
            return false;
        }
        $this->date_to = strtotime($this->date_to);
        $this->date_from = strtotime($this->date_from);
        return true;
    }
    /**
     * Gets query for [[Product]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getProduct()
    {
        return $this->hasOne(ControlPrimaryProduct::class, ['id' => 'product_id']);
    }
    public function afterFind()
    {
        $this->date_to = $this->date_to ? Yii::$app->formatter->asDate($this->date_to, 'M/dd/yyyy') : $this->date_to;
        $this->date_from = $this->date_from ? Yii::$app->formatter->asDate($this->date_from, 'M/dd/yyyy') : $this->date_from;
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

   
}
